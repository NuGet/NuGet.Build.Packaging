<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemGroup>
		<ThisAssemblyProjectProperty Include="PackageId" />
	</ItemGroup>

	<ItemDefinitionGroup>
		<Content>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Pack>true</Pack>
		</Content>
	</ItemDefinitionGroup>

	<PropertyGroup>
	    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
	
		<PackageId>NuGet.Build.Packaging</PackageId>
		<Title>NuGetizer-3000</Title>
		<Description>NuGetizer-3000</Description>
		<IsDevelopmentDependency>true</IsDevelopmentDependency>
		<PrimaryOutputKind>build</PrimaryOutputKind>

		<PackOnBuild Condition="'$(PackOnBuild)' == '' And '$(Configuration)' == 'Release'">true</PackOnBuild>
		<PackageOutputPath Condition="'$(PackageOutputPath)' == ''">..\..\..\out</PackageOutputPath>
	</PropertyGroup>

	<Import Project="$(OutputPath)NuGet.Build.Packaging.targets"
			  Condition="'$(PackOnBuild)' == 'true' and Exists('$(OutputPath)NuGet.Build.Packaging.targets')" />

	<Target Name="AddBuiltOutput" BeforeTargets="GetPackageContents" DependsOnTargets="AllProjectOutputGroups" Returns="@(PackageFile)">
		<ItemGroup>
			<PackageFile Include="$(OutputPath)ICSharpCode.Decompiler.dll">
				<PackagePath>build\ICSharpCode.Decompiler.dll</PackagePath>
			</PackageFile>
			<PackageFile Include="$(OutputPath)ICSharpCode.NRefactory.CSharp.dll">
				<PackagePath>build\ICSharpCode.NRefactory.CSharp.dll</PackagePath>
			</PackageFile>
			<PackageFile Include="$(OutputPath)ICSharpCode.NRefactory.dll">
				<PackagePath>build\ICSharpCode.NRefactory.dll</PackagePath>
			</PackageFile>
			<PackageFile Include="$(OutputPath)Mono.Cecil.dll">
				<PackagePath>build\Mono.Cecil.dll</PackagePath>
			</PackageFile>
			<PackageFile Include="$(OutputPath)Mono.Options.dll">
				<PackagePath>build\Mono.Options.dll</PackagePath>
			</PackageFile>
		</ItemGroup>
	</Target>

	<Target Name="UpdatePackagingVersion" BeforeTargets="Pack">
		<!-- Update packaging version targets -->
		<PropertyGroup>
			<XmlNs>&lt;Namespace Prefix='msb' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;</XmlNs>
		</PropertyGroup>
		<XmlPoke Namespaces="$(XmlNs)"
				 XmlInputPath="$(OutputPath)NuGet.Build.Packaging.Version.props"
				 Query="/msb:Project/msb:PropertyGroup/msb:PackagingTargetsVersion"
				 Value="$(PackageVersion)"/>
	</Target>

	<PropertyGroup>
		<CoreCompileDependsOn>
			PackageItemKind;
			$(CoreCompileDependsOn);
		</CoreCompileDependsOn>
		<PackageItemKindFile>$(IntermediateOutputPath)PackageItemKind.g$(DefaultLanguageSourceExtension)</PackageItemKindFile>
	</PropertyGroup>

	<Target Name="PackageItemKind" BeforeTargets="BuildOnlySettings" DependsOnTargets="GeneratePackageItemKind">
		<ItemGroup>
			<Compile Include="$(PackageItemKindFile)" />
		</ItemGroup>
	</Target>

	<Target Name="GeneratePackageItemKind" Inputs="$(MSBuildThisFileFullPath);NuGet.Build.Packaging.props" Outputs="$(PackageItemKindFile)">
		<MakeDir Directories="$(IntermediateOutputPath)" Condition=" !Exists('$(IntermediateOutputPath)') " />
		<MSBuild Projects="NuGet.Build.Packaging.props" Targets="_GetPackageItemKinds">
			<Output ItemName="_PackageItemKind" TaskParameter="TargetOutputs" />
		</MSBuild>

		<WriteLinesToFile Lines='
namespace $(RootNamespace)
{
	/// &lt;summary&gt;Available Kind metadata for PackageFile and _PackageContent items&lt;/summary&gt;
	public static partial class PackageItemKind
	{
' Overwrite='true' File='$(PackageItemKindFile)' />

		<WriteLinesToFile Lines='				  
		/// &lt;summary&gt;Kind: %(_PackageItemKind.Identity)&lt;/summary&gt;
		public const string %(_PackageItemKind.Identity) = nameof(%(_PackageItemKind.Identity))%3B
' Overwrite='false' File='$(PackageItemKindFile)' />

		<WriteLinesToFile Lines='
	}
}
' Overwrite='false' File='$(PackageItemKindFile)' />

		<ItemGroup>
			<FileWrites Include="$(PackageItemKindFile)" />
		</ItemGroup>
	</Target>

	<Target Name="ILRepack"
			AfterTargets="CoreCompile"
			DependsOnTargets="CoreCompile"
			Returns="@(MergedAssemblies)"
			Condition="'$(ILRepack)' != 'false'">
		<GetReferenceAssemblyPaths BypassFrameworkInstallChecks="False" TargetFrameworkMoniker="$(TargetFrameworkMoniker)">
			<Output TaskParameter="FullFrameworkReferenceAssemblyPaths" PropertyName="FullFrameworkReferenceAssemblyPaths" />
		</GetReferenceAssemblyPaths>
		<ItemGroup>
			<MergedAssemblies Include="@(ReferenceCopyLocalPaths)" Condition="$([System.String]::new('%(FileName)').StartsWith('Newtonsoft'))" />
			<MergedAssemblies Include="@(ReferenceCopyLocalPaths)" Condition="$([System.String]::new('%(FileName)').StartsWith('NuGet'))" />
			<ReferenceCopyLocalDirs Include="@(ReferenceCopyLocalPaths -> '%(RootDir)%(Directory)')" />
			<ReferenceCopyLocalPaths Remove="@(MergedAssemblies)" />
			<LibDir Include="@(ReferenceCopyLocalDirs->Distinct())" />
		</ItemGroup>
		<PropertyGroup>
			<ILRepackArgs Condition="'$(AssemblyOriginatorKeyFile)' != ''">/keyfile:&quot;$(AssemblyOriginatorKeyFile)&quot;</ILRepackArgs>
		</PropertyGroup>
		<Exec Command="&quot;$(ILRepack)&quot; @(LibDir->'/lib:&quot;%(Identity).&quot;', ' ') $(ILRepackArgs) /targetplatform:&quot;v4,$(FullFrameworkReferenceAssemblyPaths.TrimEnd(\\))&quot; /out:&quot;@(IntermediateAssembly->'%(FullPath)')&quot; &quot;@(IntermediateAssembly->'%(FullPath)')&quot; @(MergedAssemblies->'&quot;%(FullPath)&quot;', ' ')"
			  WorkingDirectory="$(MSBuildProjectDirectory)\$(OutputPath)"
			  StandardErrorImportance="high"
			  StandardOutputImportance="low"
			  ConsoleToMSBuild="true"
			  ContinueOnError="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="ILRepackOutput"/>
			<Output TaskParameter="ExitCode" PropertyName="ExitCode"/>
		</Exec>
		<Message Importance="high" Text="$(ILRepackOutput)" Condition="'$(ExitCode)' != '0'" />
		<Error Text="$(ILRepackOutput)" Condition="'$(ExitCode)' != '0' And '$(ContinueOnError)' != 'true'" />
		<Delete Files="@(MergedAssemblies -> '$(MSBuildProjectDirectory)\$(OutputPath)%(Filename)%(Extension)')" Condition="Exists('$(MSBuildProjectDirectory)\$(OutputPath)%(Filename)%(Extension)')" />
	</Target>

</Project>
