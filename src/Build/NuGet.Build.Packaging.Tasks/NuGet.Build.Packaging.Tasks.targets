<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<CoreCompileDependsOn>
			PackageItemKind;
			$(CoreCompileDependsOn);
		</CoreCompileDependsOn>
		<PackageItemKindFile>$(IntermediateOutputPath)PackageItemKind.g$(DefaultLanguageSourceExtension)</PackageItemKindFile>
	</PropertyGroup>

	<PropertyGroup>
		<PackageId>NuGet.Build.Packaging</PackageId>
		<Description>NuGet Packaging Targets</Description>
		<!-- We add the outputs ourselves, so no need for all three below -->
		<IncludeOutputs>false</IncludeOutputs>
		<IncludeSymbols>false</IncludeSymbols>
		<IncludeFrameworkReferences>false</IncludeFrameworkReferences>
		<GetPackageContentsDependsOn>
			AddBuiltOutput;
			$(GetPackageContentsDependsOn)
		</GetPackageContentsDependsOn>
	</PropertyGroup>

	<Import Project="$(OutputPath)NuGet.Build.Packaging.targets" Condition="'$(PackOnBuild)' == 'true' and Exists('$(OutputPath)NuGet.Build.Packaging.targets')" />

	<Target Name="AddBuiltOutput" DependsOnTargets="ResolveReferences;AllProjectOutputGroups;AssignTargetPaths">
		<ItemGroup>
			<PackageFile Include="@(ContentWithTargetPath)">
				<PackagePath>build\%(TargetPath)</PackagePath>
			</PackageFile>
			<PackageFile Include="@(BuiltProjectOutputGroupOutput -> '%(FinalOutputPath)')">
				<PackagePath>build\%(Filename)%(Extension)</PackagePath>
			</PackageFile>
			<PackageFile Include="@(DebugSymbolsProjectOutputGroupOutput -> '%(FinalOutputPath)')">
				<PackagePath>build\%(Filename)%(Extension)</PackagePath>
			</PackageFile>
			<PackageFile Include="@(ReferencePath)" Condition="$([System.String]::new('%(Filename)').StartsWith('NuGet'))">
				<PackagePath>build\%(Filename)%(Extension)</PackagePath>
			</PackageFile>
		</ItemGroup>
	</Target>

	<Target Name="PackageItemKind" BeforeTargets="BuildOnlySettings" DependsOnTargets="GeneratePackageItemKind">
		<ItemGroup>
			<Compile Include="$(PackageItemKindFile)" />
		</ItemGroup>
	</Target>

	<Target Name="GeneratePackageItemKind" Inputs="$(MSBuildThisFileFullPath);NuGet.Build.Packaging.props" Outputs="$(PackageItemKindFile)">
		<MakeDir Directories="$(IntermediateOutputPath)" Condition=" !Exists('$(IntermediateOutputPath)') " />
		<XmlPeek Namespaces="&lt;Namespace Prefix='msb' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;"
					 Query="/msb:Project/msb:ItemGroup/msb:PackageItemKind/@Include"
					 XmlInputPath="$(MSBuildThisProjectDirectory)NuGet.Build.Packaging.props">
			<Output TaskParameter="Result" ItemName="_PackageItemKind" />
		</XmlPeek>

		<WriteLinesToFile Lines='
namespace $(RootNamespace)
{
	/// &lt;summary&gt;Available Kind metadata for PackageFile and _PackageContent items&lt;/summary&gt;
	public static partial class PackageItemKind
	{
' Overwrite='true' File='$(PackageItemKindFile)' />

		<WriteLinesToFile Lines='				  
		/// &lt;summary&gt;Kind: %(_PackageItemKind.Identity)&lt;/summary&gt;
		public const string %(_PackageItemKind.Identity) = nameof(%(_PackageItemKind.Identity))%3B
' Overwrite='false' File='$(PackageItemKindFile)' />

		<WriteLinesToFile Lines='
	}
}
' Overwrite='false' File='$(PackageItemKindFile)' />

		<ItemGroup>
			<FileWrites Include="$(PackageItemKindFile)" />
		</ItemGroup>
	</Target>

</Project>
